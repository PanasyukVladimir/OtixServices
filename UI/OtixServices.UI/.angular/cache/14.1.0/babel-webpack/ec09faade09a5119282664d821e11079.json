{"ast":null,"code":"import _createClass from \"D:/progect/black-dashboard-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"D:/progect/black-dashboard-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n\nvar UserInfo = /*#__PURE__*/_createClass(function UserInfo(Name, Email, EmailConfirmed, PhoneNumber, PhoneNumberConfirmed) {\n  _classCallCheck(this, UserInfo);\n\n  this.name = Name;\n  this.email = Email;\n  this.emailConfirmed = EmailConfirmed;\n  this.phoneNumber = PhoneNumber;\n  this.phoneNumberConfirmed = PhoneNumberConfirmed;\n});\n\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(http) {\n      _classCallCheck(this, AuthService);\n\n      this.http = http;\n      this.authUrl = \"https://localhost:44382/api/User/\";\n    }\n\n    _createClass(AuthService, [{\n      key: \"register\",\n      value: function register(model) {\n        return this.http.post(this.authUrl + 'register', model, {\n          responseType: \"text\"\n        });\n      }\n    }, {\n      key: \"login\",\n      value: function login(model) {\n        return this.http.post(this.authUrl + 'login', model, {\n          responseType: \"text\"\n        }).pipe(map(function (response) {\n          var userId = response;\n\n          if (userId != null) {\n            localStorage.setItem('Id', userId);\n          }\n        }));\n      }\n    }, {\n      key: \"edit\",\n      value: function edit(model) {\n        return this.http.post(this.authUrl + 'edit', model, {\n          responseType: \"text\"\n        });\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(model) {\n        return this.http.post(this.authUrl + 'delete', model, {\n          responseType: \"text\"\n        });\n        /*.pipe(\r\n            map((response: any) => {\r\n                console.log(response);\r\n                const ConfirmDelete = response;\r\n                if (ConfirmDelete == true) {\r\n                    localStorage.clear();\r\n                }\r\n            })\r\n        );*/\n      }\n    }, {\n      key: \"logout\",\n      value: function logout(model) {\n        return this.http.post(this.authUrl + 'logout', model, {\n          responseType: \"text\"\n        });\n        /*.pipe(\r\n            map((response: any) => {\r\n                console.log(response);\r\n                const ConfirmLogout = response;\r\n                if (ConfirmLogout == true) {\r\n                    localStorage.clear();\r\n                }\r\n            })*/\n      }\n    }, {\n      key: \"checkAuth\",\n      value: function checkAuth() {\n        var userID = localStorage.getItem('Id');\n        console.log(userID);\n\n        if (userID != null) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }, {\n      key: \"getUserInfo\",\n      value: function getUserInfo(userId) {\n        var headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json'); //headers.append('id', userId);\n\n        var params = new HttpParams().set(\"id\", userId);\n        return this.http.get(this.authUrl + 'get', {\n          headers: headers,\n          params: params\n        });\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}